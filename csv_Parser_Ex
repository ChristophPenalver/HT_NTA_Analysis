function [data_Ex,Runs] = csv_Parser_Ex(infile_Ex,inpath_Ex,NumOfMeas,BinCenterRow)
%CSV_PARSER_EX Summary of this function goes here
%   Csv Import of the ExperimentSummary.csv data of the PTM. 
%% Initialize variables.
filename = [inpath_Ex,infile_Ex];
delimiter = ',';
% prompt = 'Enter BinCenter Row!';
% dlg_title = 'Starting Row is BinCenter Row';
% num_lines = 1;
% defaultans = {'Please enter row'};
% answer = inputdlg(prompt,dlg_title,num_lines,defaultans);
% startRow = str2num(cell2mat(answer))-8;
% endRow = startRow+999;
startRow = BinCenterRow-8;
endRow = startRow+999;


%% Format for each line of text:
% For the ExperimentSummary.csv file there are NumOfMeas+3 columns. 
% Those have to be correctly imported. First one hast to define the
% formatSpec. Every column is defined by doubles so %f is the right term.
% At the end there is a [^\n\r], to finish of. (i.e. '%f%f%f%f%f%[^\n\r]')
formEnd = '%[^\n\r]';
formDouble = '%f';
formCheck = '';
for i = 1:NumOfMeas+3
    formCheck = strcat(formCheck,formDouble);
end
formatSpec = strcat(formCheck,formEnd);

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To ygenerate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.
FirstRow = 'Diameter';
SecLastRow = 'ConcentrationAverage';
LastRow = 'StandardError';
Conc = 'ConcentrationRun';
Comma = ',';
VarNames = cell(1,(NumOfMeas+3));
Runs = cell(1,NumOfMeas);
for i = 1:NumOfMeas+3
    if i ==1
        VarNames {1,i} = FirstRow;
        elseif i == (NumOfMeas+2)
            VarNames {1,i} = SecLastRow;
            elseif i == (NumOfMeas+3)
                VarNames {1,i} = LastRow;
    else
        Num = num2str(i-1);
        Run_i = strcat(Conc,Num);
        Run_num = strcat('Run',Num);
        Runs{1,i-1} = Run_num;
        VarNames {1,i} = Run_i;
    end
end

%% Create output variable
data_Ex = table(dataArray{1:end-1},'VariableNames',VarNames);
%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
end


